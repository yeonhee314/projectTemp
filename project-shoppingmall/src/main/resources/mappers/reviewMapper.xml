<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choongang.shoppingmall.dao.ReviewDAO">
	<!-- 리뷰 개수 카운트 -->
	<select id="selectReviewTotalCount" resultType="int" parameterType="hashmap">
		select count(*) from review
		<where>
			<if test="search != null">
				${field} like '%'||#{search}||'%'
			</if>
		</where>
	</select>
	<!-- 유저 아이디 별 후기 개수 가져오기 -->
	<select id="selectReviewCountByUserId" parameterType="int" resultType="int">
		select count(*) from review where user_id=#{user_id}
	</select>
	<!-- 유저 아이디 별 후기 가져오기 -->
	<select id="selectReviewByUserId" parameterType="int" resultType="ReviewVO">
		select * from review where user_id=#{user_id}
	</select>
	<!-- 상품 id로 리뷰 가져오기 -->
	<select id="selectReviewId" parameterType="int" resultType="ReviewVO">
		select * from review where product_id=#{product_id}
	</select>
	<!-- 리뷰 id로 리뷰 가져오기 -->
	<select id="selectReviewByReviewId" parameterType="int" resultType="ReviewVO">
		select * from review where review_id=#{review_id}
	</select>
	
	<!-- 평균 별점 계산해서 가져오기 -->
	<select id="selectRating" parameterType="int" resultType="double">
		select avg(review_rating) from review where product_id=#{product_id}
	</select>
	
	<!-- 상품 id별 리뷰 개수 -->
	<select id="selectReviewCount" parameterType="int" resultType="int">
		select count(*) from review where product_id=#{product_id}
	</select>
	
	<!-- 상품 id별 리뷰 리스트 -->
	<select id="selectReviewList" parameterType="hashmap" resultType="ReviewVO">
		<![CDATA[
		select 
			R.*
		from
		(
			select 
				rownum rnum, Q.*
			from
				(select * from review order by product_id desc) Q
			where
				rownum<=#{endNo}
		) R
		where
			rnum >= #{startNo} and product_id=#{product_id}
		]]>
	</select>
	<!-- 5. 한 페이지 얻기 -->
	<select id="selectReviewPage" parameterType="hashmap" resultType="ReviewVO">
		
		select 
			R.*
		from
		(
			select 
				rownum rnum, Q.*
			from
				(select * from review r join category c on r.category_id=c.category_id
				join users u on r.user_id=u.user_id
				join product p on r.product_id=p.product_id
				<where>
					<if test="search != null">
						${field} like '%'||#{search}||'%'
					</if>
				</where>
				order by review_id desc) Q
			where
			<![CDATA[
				rownum<=#{endNo}
				]]>
		) R
		where
		<![CDATA[
			rnum >= #{startNo}
		]]>
	</select>
	<!-- 6. user_id로 유저정보 가져오기 -->
	<select id="selectUserId" parameterType="int" resultType="UserVO">
		select * from users where user_id = (select user_id from review where user_id=#{user_id})
	</select>
	
	<!-- 리뷰 작성하기 -->
	<insert id="addToReview" parameterType="ReviewVO">
		insert into review values (review_id_seq.nextval, #{user_id}, #{category_id}, #{review_title}, #{review_text}, #{review_rating}, sysdate, #{review_img}, #{product_id}, #{order_item_id}) 
	</insert>
</mapper>  