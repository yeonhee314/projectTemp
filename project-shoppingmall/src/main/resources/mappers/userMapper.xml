<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choongang.shoppingmall.dao.UserDAO">
	<!-- namespace와 인터페이스 이름이 일치해야 자동으로 구현된다. -->
	
	<!-- 회원가입 -->
	<insert id="insert" parameterType="UserVO">
		insert into users 
		(user_id, username, password, nickname, name,
        email, phone, regdate, news_email, gender, birth_date, 
        signout, user_role, user_level, user_point, postcode, 
        address, address_detail)
		values (
			users_user_id_seq.nextval,#{username},#{password},#{nickname},#{name},
			#{email},#{phone},SYSDATE,#{news_email},#{gender},#{birth_date},'N',#{user_role},
			'기본',0,#{postcode},#{address},#{address_detail}
		)
	</insert>
	
	<!-- 아이디로 1개찾기 -->
	<select id="selectByUsername" parameterType="String" resultType="UserVO">
		select * from users where username=#{username}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="selectByForgetUsername" parameterType="Map" resultType="String">
		select username from users where name=#{name} and email=#{email}
	</select>
	
	<!-- 비밀번호찾기(사용자조회) -->
	<select id="selectByUserPW" parameterType="Map" resultType="UserVO">
		select * from users where username=#{username} and phone=#{phone} and email=#{email}
	</select>
	
	<!-- 비밀번호찾기(새비밀번호로 변경) -->
	<update id="updatePassword" parameterType="Map">
		update users set password=#{password} where username=#{username}
	</update>
	
	<!-- 아이디 중복확인 -->
	<select id="selectCountByUsername" resultType="int" parameterType="String">
		select count(*) from users where username=#{username}
	</select>
	
	<!-- 이메일 중복확인 -->
	<select id="selectCountByEmail" resultType="int" parameterType="String">
		select count(*) from users where email=#{email}
	</select>
	
	<!-- 닉네임 중복확인 -->
	<select id="selectCountByNickname" resultType="int" parameterType="String">
		select count(*) from users where nickname=#{nickname}
	</select>
	
	<!-- 핸드폰 중복확인 -->
	<select id="selectCountByPhone" resultType="int" parameterType="String">
		select count(*) from users where phone=#{phone}
	</select>
	
	<!-- 사용자 ID로 회원 정보 조회 -->
	<select id="getUserById" parameterType="int" resultType="UserVO">
		select * from users where user_id=#{userId}
	</select>
	<select id="selectUserById" parameterType="int" resultType="UserVO">
		select * from users where user_id=#{user_id}
	</select>
	
	<!-- 사용자 정보 업데이트-->
	<update id="updateUser" parameterType="UserVO">
		 UPDATE users
        SET password = #{password},
       		nickname = #{nickname},
       		phone = #{phone},
         	birth_date = #{birth_date},
         	email = #{email},
            news_email = #{news_email}
        WHERE user_id=#{user_id}
	</update>
	
	<!-- 포인트 증감 -->
	<update id="pointUpdate" parameterType="UserVO">
		update users set user_point = user_point 
		<choose>
			<when test="pnm == 'plus'.toString()">
			+ #{user_point} where user_id=#{user_id}
			</when>
			<otherwise>
			- #{user_point} where user_id=#{user_id}
			</otherwise>
		</choose>
	</update>
</mapper>  